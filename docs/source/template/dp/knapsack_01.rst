###################################################
0/1 背包問題
###################################################

.. sidebar:: Tags

    - ``tag_dp``

.. contents:: TOC
    :depth: 2

************************
程式碼
************************

::

    dp[i][j] = 使用第 1 ~ i 種物件，在總重 j 的限制下的最大價值
    dp[0][0] = 0
    考慮第 i 種要用不用：
    dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - w[i]] + v[i])

.. code-block:: cpp
    :linenos:

    int N, W, w[i], v[i];
    int dp[MAX_W + 1];

    dp[0] = 0;
    for (int i = 1; i <= N; i++) {
        for (int j = W; j >= w[i]; j--) {
            dp[j] = max(dp[j], dp[j - w[i]] + v[i]);
        }
    }

************************
模板驗證
************************

待測
